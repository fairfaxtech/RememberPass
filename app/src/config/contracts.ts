// RememberPass contract on Sepolia (update after deploy)
export const CONTRACT_ADDRESS = '0x64721d2896c7105EFbE15640361FC1aD0a0596c0' as `0x${string}`;

// ABI copied from artifacts/contracts/RememberPass.sol/RememberPass.json
export const CONTRACT_ABI = [{"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "user", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "index", "type": "uint256"}], "name": "RecordAdded", "type": "event"}, {"inputs": [{"internalType": "string", "name": "title", "type": "string"}, {"internalType": "string", "name": "cipher", "type": "string"}, {"internalType": "externalEuint256", "name": "keyExternal", "type": "bytes32"}, {"internalType": "bytes", "name": "inputProof", "type": "bytes"}], "name": "addRecord", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "user", "type": "address"}], "name": "getAllRecords", "outputs": [{"internalType": "string[]", "name": "titles", "type": "string[]"}, {"internalType": "string[]", "name": "ciphers", "type": "string[]"}, {"internalType": "euint256[]", "name": "keys", "type": "bytes32[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "user", "type": "address"}, {"internalType": "uint256", "name": "index", "type": "uint256"}], "name": "getRecord", "outputs": [{"internalType": "string", "name": "title", "type": "string"}, {"internalType": "string", "name": "cipher", "type": "string"}, {"internalType": "euint256", "name": "keyEnc", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "user", "type": "address"}], "name": "getRecordCount", "outputs": [{"internalType": "uint256", "name": "count", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "protocolId", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "pure", "type": "function"}] as const;
